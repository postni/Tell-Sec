/* Bilder */
var DIR = '../img';

// create an array with nodes
var nodes = new vis.DataSet([
    { id: 1, shape: 'image', image: 'img/person.png', label: 'Person' },
]);

// create an array with edges
var edges = new vis.DataSet([
    { from: 1, to: 3 },
    { from: 1, to: 2 },
    { from: 2, to: 4 },
    { from: 2, to: 5 }
]);

// create a network
var container = document.getElementById('mynetwork');

// provide the data in the vis format
var data = {
    nodes: nodes,
    edges: edges
};


// initialize your network!


var options = {
    locale: 'de',
    manipulation: {
        addNode: false,
        addEdge: function (data, callback) {
            if (data.from == data.to) {

            }
            else {
                callback(data);
            }
            
        }
    }
}


var network = new vis.Network(container, data, options);

var ids = 100;





/*funktionen*/
function addNode(typ, img) {
    try {
        nodes.add({
            id: ids.value,
            label: typ,
            shape: 'image',
            image: 'img/' + img + '.png'
        });
        ids++;
        console.log(JSON.stringify(nodes))
    }
    catch (err) {
        alert(err);
    }
}

function removeElement() {
    let selectedNodes = network.getSelectedNodes();
    let selectedEdges = network.getSelectedEdges();
    selectedNodes.forEach(function (element) {
        try {
            nodes.remove({ id: element });
        }
        catch (err) {
            alert(err);
        }

    }, this);
    selectedEdges.forEach(function (element) {
        try {
            edges.remove({ id: element });
        }
        catch (err) {
            alert(err);
        }

    }, this);

}
/*Ausgabe label des angeklickten Elements */
network.on("click", (params)=>{
    let label = (nodes._data[(params.nodes[0])].label);
    console.log("label: "+label);
    document.getElementById("label").innerText = label
    modal.style.display = "block";
    console.log(testdaten[params.nodes[0]])
})


var testdaten = {"1":{
    "hostname": "Timo",
    "vendor": "TimoTec",
    "os": "Timo94",
    "ip": "1234567",
    "id": "1",
    "mac": "123456789",
    "ports": [
        {
            "port": "666",
            "protocol": "gangbang"
        }
    ],
    "devicetype": "penis",
    "risks": [
        {
            "description": "zu kleiner penis",
            "consequences": [
                "kein sex"
            ],
            "countermeasures": [
                "penisvergroesserung"
            ]
        }
    ],
    "categories": ["dinge"]
    
}}



/*.................... */
// Get the modal
var modal = document.getElementById('myModal');

// Get the button that opens the modal
var btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];



// When the user clicks on <span> (x), close the modal
span.onclick = function() {
    modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}